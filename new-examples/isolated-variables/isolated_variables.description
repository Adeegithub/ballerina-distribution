// When a variable is declared as `isolated`, compiler guarantees that it is an `isolated` root and
// accessed only within a `lock` statement. An `isolated` variable declaration must be at module-level,
// not public, and initialized with an `isolated` expression. A `lock` statement that accesses an
// `isolated` variable must maintain `isolated` root invariant: <br></br>
// - access only one `isolated` variable. <br></br>
// - call only `isolated` functions. <br></br>
// - transfers of values in and out must use `isolated` expressions. <br></br>
// The `isolated` functions are allowed to access `isolated` module-level variables,
// provided they follow the above rules.

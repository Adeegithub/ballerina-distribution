// An object can be made iterable by using `*object:Iterable;` as a sequence of values of type 
// by providing a method named `iterator` which returns a iterator that is a subtype of
// `object { public isolated function next() returns record {| T value; |}C?;}`.
// We refer to iterable object as `Iterable<T,()>` and iterator as `Iterator<T,()>`.
// Iterable object which does not return error in next method can be iterated over using a `foreach` loop.
// In this example, `IteratorGenerator` is a subtype of `Iterable<int,()>` and `ArrayIterator` is a subtype
// of `Iterator<int,()>`.

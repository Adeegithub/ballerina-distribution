// A `table` is a collection of records. Each `record` represents a row of the `table`.
// A `table` is plain data if and only if its rows are plain data. Table maintains an invariant
// that each row is uniquely identified by a key. Each rowâ€™s key is stored in fields, which
// must be immutable. <br/><br/>
// Compared to maps,
// <ul>
// <li>key is part of the value, rather than separate</li>
// <li>type of the key is not restricted to `string`</li>
// <li>order of members is preserved</li>
// </ul>
// <br/><br/>
// <p>A `record` field can be declared as `readonly`. A value cannot be assigned to such a field
// after the record is created. `table` type gives the type of the row and name of the key field.
// `table constructor expression` looks like an `array constructor`. `foreach` statement will
// iterate over a table's rows in order. Use `t[k]` to access a row using its key.</p>
